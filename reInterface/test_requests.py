# -*- coding: utf-8 -*-# @Author  : leiziimport requests,jsonfrom common.log import LOG,logger@logger('requests封装')class requ():    def __init__(self):        self.headers = {"User-Agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:51.0) Gecko/20100101 Firefox/51.0","Content-Type":"application/json","charset":"UTF-8"}    def get(self, url,parms):#get消息        try:            r = requests.get(url, params=parms,headers=self.headers)            r.encoding = 'UTF-8'            # json_response = json.loads(r.text)            json_response = r.text            return {'code':r.status_code,'result':json_response }        except Exception as e:            LOG.info('get请求出错，出错原因:%s'%e)            return {'code':r.status_code, 'result': 'get请求出错，出错原因:%s'%e}    # def post(self, url: object, parms: object) -> object:#post消息    def post(self, url, d_parms=None,j_parms=None):# post消息        """        :rtype: object        """        # datas = json.dumps(parms)        try:            r =requests.post(url,data=d_parms,json=j_parms,headers=self.headers)            r.encoding = 'UTF-8'            # json_response = json.loads(r.text)            json_response =r.text            return {'code': r.status_code, 'result': json_response}        except Exception as e:            LOG.info('post请求出错，出错原因:%s' % e)            return {'code': r.status_code, 'result': 'post请求出错，出错原因:%s' % e}    def delfile(self,url,params):#删除的请求        try:            del_word=requests.delete(url,params=params,headers=self.headers)            json_response=json.loads(del_word.text)            return {'code': del_word.status_code, 'result': json_response}        except Exception as e:            LOG.info('del请求出错，出错原因:%s' % e)            return {'code': del_word.status_code, 'result': 'del请求出错，出错原因:%s' % e}    def putfile(self,url,params):#put请求        try:            data=json.dumps(params)            me=requests.put(url,data)            json_response=json.loads(me.text)            return {'code': me.status_code, 'result': json_response}        except Exception as e:            LOG.info('put请求出错，出错原因:%s' % e)            return {'code': me.status_code, 'result': 'put请求出错，出错原因:%s' % e}